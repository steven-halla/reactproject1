{"ast":null,"code":"var _jsxFileName = \"/Users/stevenhalla/code/cs246_react_project-main/src/views/cart/PaymentSuccessful.jsx\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const PaymentSuccessful = _ref => {\n  let {\n    shoppingCart,\n    totalCost,\n    discount\n  } = _ref;\n  const products = Array.from(shoppingCart.products.values());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-center\",\n      children: \"Payment Successful\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Your Purchase:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: products.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [item.product.name, \" - Quantity: \", item.count, \" - Price per item: $\", item.product.price.toFixed(2)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Discount Applied: $\", discount.toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Total Paid: $\", (totalCost - discount).toFixed(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this);\n};\n_c = PaymentSuccessful;\n\nvar _c;\n\n$RefreshReg$(_c, \"PaymentSuccessful\");","map":{"version":3,"sources":["/Users/stevenhalla/code/cs246_react_project-main/src/views/cart/PaymentSuccessful.jsx"],"names":["React","PaymentSuccessful","shoppingCart","totalCost","discount","products","Array","from","values","map","item","index","product","name","count","price","toFixed"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,MAAMC,iBAAiB,GAAG,QAA2C;AAAA,MAA1C;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,SAAhB;AAA2BC,IAAAA;AAA3B,GAA0C;AACxE,QAAMC,QAAQ,GAAGC,KAAK,CAACC,IAAN,CAAWL,YAAY,CAACG,QAAb,CAAsBG,MAAtB,EAAX,CAAjB;AAEA,sBACI;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBACKH,QAAQ,CAACI,GAAT,CAAa,CAACC,IAAD,EAAOC,KAAP,kBACV;AAAA,qBACKD,IAAI,CAACE,OAAL,CAAaC,IADlB,mBACqCH,IAAI,CAACI,KAD1C,0BACqEJ,IAAI,CAACE,OAAL,CAAaG,KAAb,CAAmBC,OAAnB,CAA2B,CAA3B,CADrE;AAAA,WAASL,KAAT;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAFJ,eASI;AAAA,0CAAuBP,QAAQ,CAACY,OAAT,CAAiB,CAAjB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AAAA,oCAAiB,CAACb,SAAS,GAAGC,QAAb,EAAuBY,OAAvB,CAA+B,CAA/B,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAVJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH,CApBM;KAAMf,iB","sourcesContent":["import React from 'react';\n\nexport const PaymentSuccessful = ({ shoppingCart, totalCost, discount }) => {\n    const products = Array.from(shoppingCart.products.values());\n\n    return (\n        <div className=\"container mt-5\">\n            <h1 className=\"text-center\">Payment Successful</h1>\n            <div className=\"text-center\">\n                <h3>Your Purchase:</h3>\n                <ul>\n                    {products.map((item, index) => (\n                        <li key={index}>\n                            {item.product.name} - Quantity: {item.count} - Price per item: ${item.product.price.toFixed(2)}\n                        </li>\n                    ))}\n                </ul>\n                <p>Discount Applied: ${discount.toFixed(2)}</p>\n                <p>Total Paid: ${(totalCost - discount).toFixed(2)}</p>\n            </div>\n        </div>\n    );\n};\n"]},"metadata":{},"sourceType":"module"}